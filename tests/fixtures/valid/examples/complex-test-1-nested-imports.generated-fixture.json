{
  "name": "complex-test-1-nested-imports",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Complex Test 1: Nested Imports and Variable Scoping\n\n@text project_name = \"Meld Complex Test\"\n\n# Create a library file that imports another file\n@text lib_content = [[\n@import { imported_title } from \"files/imports.mld\"\n@text lib_message = \"Library says: {{imported_title}}\"\n@data lib_config = {\n  \"name\": \"lib\",\n  \"version\": \"1.0.0\",\n  \"imported\": @imported_title\n}\n]]\n\n>> Simulate creating the lib file (in real usage, this would be a separate file)\n@exec write_lib(content) = @run [echo '@lib_content @content' > ./files/lib.mld]\n\n@run @write_lib(\"Hi\")\n\n>> Now import from our \"lib\" that itself has imports\n@import { lib_message, lib_config } from \"./files/lib.mld\"\n\n>> Test if nested imports work and variable scoping is correct\n@text final_output = [[\nProject: {{project_name}}\nLibrary Message: {{lib_message}}\nLibrary Config: {{lib_config.name}} v{{lib_config.version}}\nImported Value in Config: {{lib_config.imported}}\n]]\n\n@add @final_output",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": null,
  "parseError": {
    "message": "Expected Any path expression or whitespace but \"\\\"\" found.",
    "location": {
      "start": {
        "offset": 653,
        "line": 22,
        "column": 42
      },
      "end": {
        "offset": 654,
        "line": 22,
        "column": 43
      }
    }
  }
}