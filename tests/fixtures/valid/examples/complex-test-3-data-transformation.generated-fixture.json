{
  "name": "complex-test-3-data-transformation",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Complex Test 3: Data Transformation Pipeline\n\n@data users = [\n  { \"id\": 1, \"name\": \"Alice\", \"role\": \"admin\", \"active\": true },\n  { \"id\": 2, \"name\": \"Bob\", \"role\": \"user\", \"active\": true },\n  { \"id\": 3, \"name\": \"Charlie\", \"role\": \"user\", \"active\": false },\n  { \"id\": 4, \"name\": \"Diana\", \"role\": \"admin\", \"active\": true }\n]\n\n@data stats = {\n  \"total\": 4,\n  \"admins\": 2,\n  \"active\": 3\n}\n\n# Complex exec commands for data processing\n@exec count_by_role(role) = @run [echo '@users' | jq '[.[] | select(.role == \"@role\")] | length']\n@exec get_active_users = @run [echo '@users' | jq '[.[] | select(.active == true)] | length']\n\n# Test array access and data operations\n@text user_report = [[\n# User Management Report\n\n## Statistics\n- Total Users: {{stats.total}}\n- Admins: {{stats.admins}}\n- Active Users: {{stats.active}}\n\n## User List\n1. {{users.0.name}} ({{users.0.role}}) - Active: {{users.0.active}}\n2. {{users.1.name}} ({{users.1.role}}) - Active: {{users.1.active}}\n3. {{users.2.name}} ({{users.2.role}}) - Active: {{users.2.active}}\n4. {{users.3.name}} ({{users.3.role}}) - Active: {{users.3.active}}\n]]\n\n@text role = @run @count_by_role(admin)\n@text users = @run @count_by_role(user)\n@text active = @run @get_active_users\n\n@text user_counts = [[\n## Computed Values\nAdmin Count: {{role}}\nUser Count: {{users}}\nActive Users: {{active}}\n]]\n\n@add [[ \n{{user_report}}\n{{user_counts}}\n]]",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": null,
  "parseError": {
    "message": "Expected \"@\", \"bash\", \"javascript\", \"js\", \"py\", \"python\", \"sh\", Wrapped command content, or whitespace but \"[\" found.",
    "location": {
      "start": {
        "offset": 464,
        "line": 17,
        "column": 34
      },
      "end": {
        "offset": 465,
        "line": 17,
        "column": 35
      }
    }
  }
}