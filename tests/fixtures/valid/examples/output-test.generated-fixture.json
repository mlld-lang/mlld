{
  "name": "output-test",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Output Management Test\n\nThis file tests the new output management features.\n\n## Test 1: Progress Indicators\n\n@run [echo \"Starting process...\"]\n@run [sleep 1 && echo \"Processing...\"]\n@run [echo \"Complete!\"]\n\n## Test 2: Long Output (should truncate)\n\n@run [seq 1 100]\n\n## Test 3: Error Handling\n\n### Halt Mode (comment out to test)\n@text mode = \"Testing halt mode\"\n@run [echo \"This runs\"]\n<!-- @run [nonexistent-command] -->\n@run [echo \"This won't run if error above is uncommented\"]\n\n### Continue Mode\n@run [echo \"Starting continue mode test\"]\n@run [false]\n@run [echo \"This should still run even after error\"]\n\n## Test 4: Multiple Errors (for collection)\n\n@run [echo \"Task 1: Success\"]\n@run [exit 1]\n@run [echo \"Task 2: Success\"] \n@run [exit 2]\n@run [echo \"Task 3: Success\"]\n\n## Test 5: Code Execution\n\n@run {js}\nconsole.log(\"JavaScript output test\");\nfor (let i = 1; i <= 5; i++) {\n  console.log(`Line ${i}`);\n}\n{js}\n\n## Done!\n\nAll tests complete.",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": null,
  "parseError": {
    "message": "Expected \"@\", \"bash\", \"javascript\", \"js\", \"py\", \"python\", \"sh\", Wrapped command content, or whitespace but \"{\" found.",
    "location": {
      "start": {
        "offset": 809,
        "line": 38,
        "column": 6
      },
      "end": {
        "offset": 810,
        "line": 38,
        "column": 7
      }
    }
  }
}