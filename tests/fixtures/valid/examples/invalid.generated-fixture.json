{
  "name": "invalid",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n@text myvar = \"Hello world\"\n@data person = { \"name\": \"John\", \"age\": 30 }\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say {{myvar}} - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n@text myvar = \"Hello world\"\n\nThis is some text. Now I'm going to say:\n@add @myvar\n\nOr with templates:\n@text greeting = [[Hello {{myvar}}!]]\n@add @greeting\n\nThe key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive.",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": [
    {
      "type": "Text",
      "nodeId": "fb6b7078-4ca1-4ffe-b566-2b0a1c4854aa",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 157,
          "line": 5,
          "column": 1
        }
      },
      "content": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "3c63400e-f668-43a1-9949-210606e7d70f",
      "location": {
        "start": {
          "offset": 157,
          "line": 5,
          "column": 1
        },
        "end": {
          "offset": 184,
          "line": 5,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "27643314-6036-4e46-842a-963122ade46a",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "1548c1bd-d88b-465d-9548-21e31b568a6a",
            "location": {
              "start": {
                "offset": 171,
                "line": 5,
                "column": 15
              },
              "end": {
                "offset": 184,
                "line": 5,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Newline",
      "nodeId": "55cb7e7b-e959-4dbd-8966-75365e61f736",
      "location": {
        "start": {
          "offset": 184,
          "line": 5,
          "column": 28
        },
        "end": {
          "offset": 185,
          "line": 6,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "40296b1e-cb22-4d26-9f82-1945f9189f7c",
      "location": {
        "start": {
          "offset": 185,
          "line": 6,
          "column": 1
        },
        "end": {
          "offset": 229,
          "line": 6,
          "column": 45
        }
      },
      "kind": "data",
      "subtype": "dataAssignment",
      "source": "object",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "a7e4cc62-b4b4-46bb-972d-4a997007e9dd",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "person"
          }
        ],
        "value": {
          "type": "object",
          "properties": {
            "name": [
              {
                "type": "Text",
                "nodeId": "fe27795a-acd0-47c3-a185-f91e5364a022",
                "location": {
                  "start": {
                    "offset": 210,
                    "line": 6,
                    "column": 26
                  },
                  "end": {
                    "offset": 216,
                    "line": 6,
                    "column": 32
                  }
                },
                "content": "John"
              }
            ],
            "age": 30
          }
        }
      },
      "raw": {
        "identifier": "person",
        "value": "{\n  \"name\": [\n    {\n      \"type\": \"Text\",\n      \"nodeId\": \"fe27795a-acd0-47c3-a185-f91e5364a022\",\n      \"location\": {\n        \"start\": {\n          \"offset\": 210,\n          \"line\": 6,\n          \"column\": 26\n        },\n        \"end\": {\n          \"offset\": 216,\n          \"line\": 6,\n          \"column\": 32\n        }\n      },\n      \"content\": \"John\"\n    }\n  ],\n  \"age\": 30\n}"
      },
      "meta": {
        "objectData": {
          "propCount": 2
        }
      }
    },
    {
      "type": "Text",
      "nodeId": "b34a5b1f-d4a8-4878-92a5-43e5527319b6",
      "location": {
        "start": {
          "offset": 229,
          "line": 6,
          "column": 45
        },
        "end": {
          "offset": 405,
          "line": 12,
          "column": 19
        }
      },
      "content": "\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say "
    },
    {
      "type": "VariableReference",
      "nodeId": "5fb7dea1-4b6c-4833-9852-303a03aa64c2",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 0,
          "line": 1,
          "column": 1
        }
      },
      "valueType": "varInterpolation",
      "identifier": "myvar"
    },
    {
      "type": "Text",
      "nodeId": "d6c038e1-0982-47a5-87b6-a9cfd39268d3",
      "location": {
        "start": {
          "offset": 414,
          "line": 12,
          "column": 28
        },
        "end": {
          "offset": 674,
          "line": 24,
          "column": 1
        }
      },
      "content": " - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "ad51613d-6f2c-47d8-a8b3-e80bd8e76e65",
      "location": {
        "start": {
          "offset": 674,
          "line": 24,
          "column": 1
        },
        "end": {
          "offset": 701,
          "line": 24,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "b28bc277-b7e6-427a-b1c7-14c331b01557",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "5b77a867-f221-4da9-b0f5-bf4047194b33",
            "location": {
              "start": {
                "offset": 688,
                "line": 24,
                "column": 15
              },
              "end": {
                "offset": 701,
                "line": 24,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Text",
      "nodeId": "09c11a10-81f1-402c-b484-c97a57ed841f",
      "location": {
        "start": {
          "offset": 701,
          "line": 24,
          "column": 28
        },
        "end": {
          "offset": 744,
          "line": 27,
          "column": 1
        }
      },
      "content": "\n\nThis is some text. Now I'm going to say:\n"
    },
    {
      "type": "Directive",
      "nodeId": "3380dc9e-c64f-4489-8a26-eb309d9aa4d5",
      "location": {
        "start": {
          "offset": 744,
          "line": 27,
          "column": 1
        },
        "end": {
          "offset": 757,
          "line": 29,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "67050682-1e2e-488e-ae2c-36a52b7997b9",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "myvar"
          }
        ]
      },
      "raw": {
        "variable": "@myvar"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "fee97120-6c48-462c-859b-57c72c9a81ea",
      "location": {
        "start": {
          "offset": 757,
          "line": 29,
          "column": 1
        },
        "end": {
          "offset": 776,
          "line": 30,
          "column": 1
        }
      },
      "content": "Or with templates:\n"
    },
    {
      "type": "Directive",
      "nodeId": "56bc45ca-ab02-4aa4-a439-a0de008c442c",
      "location": {
        "start": {
          "offset": 776,
          "line": 30,
          "column": 1
        },
        "end": {
          "offset": 813,
          "line": 30,
          "column": 38
        }
      },
      "kind": "text",
      "subtype": "textTemplate",
      "source": "template",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "1ada0667-fbef-4c07-ae9e-09331da688d8",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "greeting"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "31b58fbd-0bea-4d9e-a2b9-764e672151e1",
            "location": {
              "start": {
                "offset": 795,
                "line": 30,
                "column": 20
              },
              "end": {
                "offset": 801,
                "line": 30,
                "column": 26
              }
            },
            "content": "Hello "
          },
          {
            "type": "VariableReference",
            "nodeId": "c07bc577-6033-4a30-bb81-587f677cb728",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varInterpolation",
            "identifier": "myvar"
          },
          {
            "type": "Text",
            "nodeId": "1f3bd31e-249e-46df-a9eb-0a69b38720e7",
            "location": {
              "start": {
                "offset": 810,
                "line": 30,
                "column": 35
              },
              "end": {
                "offset": 811,
                "line": 30,
                "column": 36
              }
            },
            "content": "!"
          }
        ]
      },
      "raw": {
        "identifier": "greeting",
        "content": "Hello {{myvar}}!"
      },
      "meta": {
        "sourceType": "template",
        "hasVariables": true,
        "isTemplateContent": true
      }
    },
    {
      "type": "Newline",
      "nodeId": "22c7353e-b3a0-4010-abf3-c61eed1978fc",
      "location": {
        "start": {
          "offset": 813,
          "line": 30,
          "column": 38
        },
        "end": {
          "offset": 814,
          "line": 31,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "f0326317-82e5-401c-8b0e-3af96888d034",
      "location": {
        "start": {
          "offset": 814,
          "line": 31,
          "column": 1
        },
        "end": {
          "offset": 830,
          "line": 33,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "913b1c9a-4a41-4a20-ba44-67427d99da4b",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "greeting"
          }
        ]
      },
      "raw": {
        "variable": "@greeting"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "765ac5b2-6b4f-47e5-89cb-338bde782857",
      "location": {
        "start": {
          "offset": 830,
          "line": 33,
          "column": 1
        },
        "end": {
          "offset": 1010,
          "line": 34,
          "column": 77
        }
      },
      "content": "The key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive."
    }
  ],
  "parseError": null
}