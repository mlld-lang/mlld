{
  "name": "invalid",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n@text myvar = \"Hello world\"\n@data person = { \"name\": \"John\", \"age\": 30 }\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say {{myvar}} - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n@text myvar = \"Hello world\"\n\nThis is some text. Now I'm going to say:\n@add @myvar\n\nOr with templates:\n@text greeting = [[Hello {{myvar}}!]]\n@add @greeting\n\nThe key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive.",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": [
    {
      "type": "Text",
      "nodeId": "34d79a37-ec86-4266-986c-b39c5c5146f3",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 157,
          "line": 5,
          "column": 1
        }
      },
      "content": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "0bb4e9c4-fa98-442f-9528-bfa3b730a8d3",
      "location": {
        "start": {
          "offset": 157,
          "line": 5,
          "column": 1
        },
        "end": {
          "offset": 184,
          "line": 5,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "cbf1e6b4-c942-49c8-8bee-07ff2c4224b5",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "2326a2e9-28c7-4baa-95ea-462dd7ee5c68",
            "location": {
              "start": {
                "offset": 171,
                "line": 5,
                "column": 15
              },
              "end": {
                "offset": 184,
                "line": 5,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Newline",
      "nodeId": "47542083-2139-4cd6-8592-1991f291cc42",
      "location": {
        "start": {
          "offset": 184,
          "line": 5,
          "column": 28
        },
        "end": {
          "offset": 185,
          "line": 6,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "fe0a64a8-b769-4442-be58-46d18689aa80",
      "location": {
        "start": {
          "offset": 185,
          "line": 6,
          "column": 1
        },
        "end": {
          "offset": 229,
          "line": 6,
          "column": 45
        }
      },
      "kind": "data",
      "subtype": "dataAssignment",
      "source": "object",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "2752fd13-23da-4d51-85aa-05c7722528d0",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "person"
          }
        ],
        "value": {
          "type": "object",
          "properties": {
            "name": [
              {
                "type": "Text",
                "nodeId": "4b27b7cc-226d-4249-ab1c-1b25bd2e8928",
                "location": {
                  "start": {
                    "offset": 210,
                    "line": 6,
                    "column": 26
                  },
                  "end": {
                    "offset": 216,
                    "line": 6,
                    "column": 32
                  }
                },
                "content": "John"
              }
            ],
            "age": 30
          }
        }
      },
      "raw": {
        "identifier": "person",
        "value": "{\n  \"name\": [\n    {\n      \"type\": \"Text\",\n      \"nodeId\": \"4b27b7cc-226d-4249-ab1c-1b25bd2e8928\",\n      \"location\": {\n        \"start\": {\n          \"offset\": 210,\n          \"line\": 6,\n          \"column\": 26\n        },\n        \"end\": {\n          \"offset\": 216,\n          \"line\": 6,\n          \"column\": 32\n        }\n      },\n      \"content\": \"John\"\n    }\n  ],\n  \"age\": 30\n}"
      },
      "meta": {
        "objectData": {
          "propCount": 2
        }
      }
    },
    {
      "type": "Text",
      "nodeId": "3c787856-0b83-448f-91cf-deb13d269a41",
      "location": {
        "start": {
          "offset": 229,
          "line": 6,
          "column": 45
        },
        "end": {
          "offset": 405,
          "line": 12,
          "column": 19
        }
      },
      "content": "\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say "
    },
    {
      "type": "VariableReference",
      "nodeId": "d2aa973a-cc52-4fc7-ad7a-a4c9405db545",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 0,
          "line": 1,
          "column": 1
        }
      },
      "valueType": "varInterpolation",
      "identifier": "myvar"
    },
    {
      "type": "Text",
      "nodeId": "a217e0f6-6920-45b0-9f15-7f3676803620",
      "location": {
        "start": {
          "offset": 414,
          "line": 12,
          "column": 28
        },
        "end": {
          "offset": 674,
          "line": 24,
          "column": 1
        }
      },
      "content": " - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "ad5f32d6-dca5-444f-a5e8-93feb877bb31",
      "location": {
        "start": {
          "offset": 674,
          "line": 24,
          "column": 1
        },
        "end": {
          "offset": 701,
          "line": 24,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "396806ce-3aef-43d3-abc3-ddfacd4c0186",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "ee3cfaee-0c65-4d5c-b9a1-8bfe0a101fc4",
            "location": {
              "start": {
                "offset": 688,
                "line": 24,
                "column": 15
              },
              "end": {
                "offset": 701,
                "line": 24,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Text",
      "nodeId": "142255e1-1bbe-416d-a425-2272a9e7224c",
      "location": {
        "start": {
          "offset": 701,
          "line": 24,
          "column": 28
        },
        "end": {
          "offset": 744,
          "line": 27,
          "column": 1
        }
      },
      "content": "\n\nThis is some text. Now I'm going to say:\n"
    },
    {
      "type": "Directive",
      "nodeId": "e548a4d4-1439-499b-9e24-990f6667ca69",
      "location": {
        "start": {
          "offset": 744,
          "line": 27,
          "column": 1
        },
        "end": {
          "offset": 757,
          "line": 29,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "fbfc08a6-37a7-449b-ba0a-33555a54d808",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "myvar"
          }
        ]
      },
      "raw": {
        "variable": "@myvar"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "4df3f387-ce3d-45f8-b2b5-d8464ad1561b",
      "location": {
        "start": {
          "offset": 757,
          "line": 29,
          "column": 1
        },
        "end": {
          "offset": 776,
          "line": 30,
          "column": 1
        }
      },
      "content": "Or with templates:\n"
    },
    {
      "type": "Directive",
      "nodeId": "03d6f63b-eb7e-47f7-b2b1-c3f2b96360f7",
      "location": {
        "start": {
          "offset": 776,
          "line": 30,
          "column": 1
        },
        "end": {
          "offset": 813,
          "line": 30,
          "column": 38
        }
      },
      "kind": "text",
      "subtype": "textTemplate",
      "source": "template",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "55e6d740-a29e-482e-82c7-186028ccd955",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "greeting"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "268d17bf-ef9b-4e98-8987-ab349bb0e747",
            "location": {
              "start": {
                "offset": 795,
                "line": 30,
                "column": 20
              },
              "end": {
                "offset": 801,
                "line": 30,
                "column": 26
              }
            },
            "content": "Hello "
          },
          {
            "type": "VariableReference",
            "nodeId": "7e2b91f9-3795-4584-b4ff-859577a0945f",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varInterpolation",
            "identifier": "myvar"
          },
          {
            "type": "Text",
            "nodeId": "e4182515-639c-429b-a87a-e6eb6c642779",
            "location": {
              "start": {
                "offset": 810,
                "line": 30,
                "column": 35
              },
              "end": {
                "offset": 811,
                "line": 30,
                "column": 36
              }
            },
            "content": "!"
          }
        ]
      },
      "raw": {
        "identifier": "greeting",
        "content": "Hello {{myvar}}!"
      },
      "meta": {
        "sourceType": "template",
        "hasVariables": true,
        "isTemplateContent": true
      }
    },
    {
      "type": "Newline",
      "nodeId": "711d4773-b24a-45dd-9c5a-bd525a72272b",
      "location": {
        "start": {
          "offset": 813,
          "line": 30,
          "column": 38
        },
        "end": {
          "offset": 814,
          "line": 31,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "909ff605-1651-4bd6-87e4-8afff4610be0",
      "location": {
        "start": {
          "offset": 814,
          "line": 31,
          "column": 1
        },
        "end": {
          "offset": 830,
          "line": 33,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "44262eeb-54fe-4b58-88a6-d2b3c0e6ef46",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "greeting"
          }
        ]
      },
      "raw": {
        "variable": "@greeting"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "dad43d6f-d23c-45af-a80a-7e4be71d0dc0",
      "location": {
        "start": {
          "offset": 830,
          "line": 33,
          "column": 1
        },
        "end": {
          "offset": 1010,
          "line": 34,
          "column": 77
        }
      },
      "content": "The key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive."
    }
  ],
  "parseError": null
}