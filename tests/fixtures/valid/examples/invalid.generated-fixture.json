{
  "name": "invalid",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n@text myvar = \"Hello world\"\n@data person = { \"name\": \"John\", \"age\": 30 }\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say {{myvar}} - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n@text myvar = \"Hello world\"\n\nThis is some text. Now I'm going to say:\n@add @myvar\n\nOr with templates:\n@text greeting = [[Hello {{myvar}}!]]\n@add @greeting\n\nThe key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive.",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": [
    {
      "type": "Text",
      "nodeId": "98613d55-f320-439c-80f3-3bdd12177179",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 157,
          "line": 5,
          "column": 1
        }
      },
      "content": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "d344114f-4f8c-4442-8cbb-d17c72bb1fed",
      "location": {
        "start": {
          "offset": 157,
          "line": 5,
          "column": 1
        },
        "end": {
          "offset": 184,
          "line": 5,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "27f2cb2b-e3d1-4d69-9d67-9f02de3eedd3",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "77dcd347-9cd6-437a-b7b6-128738e669d1",
            "location": {
              "start": {
                "offset": 171,
                "line": 5,
                "column": 15
              },
              "end": {
                "offset": 184,
                "line": 5,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Newline",
      "nodeId": "9c589437-e60d-400c-9df8-2d125c28ab5c",
      "location": {
        "start": {
          "offset": 184,
          "line": 5,
          "column": 28
        },
        "end": {
          "offset": 185,
          "line": 6,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "9f09f6ff-6644-4514-b3f6-5367e474438d",
      "location": {
        "start": {
          "offset": 185,
          "line": 6,
          "column": 1
        },
        "end": {
          "offset": 229,
          "line": 6,
          "column": 45
        }
      },
      "kind": "data",
      "subtype": "dataAssignment",
      "source": "object",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "6aa17656-ac4f-448f-a011-ca0ed6581bca",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "person"
          }
        ],
        "value": {
          "type": "object",
          "properties": {
            "name": [
              {
                "type": "Text",
                "nodeId": "1eca1c98-2415-4fa9-bbc2-9f5af7776027",
                "location": {
                  "start": {
                    "offset": 210,
                    "line": 6,
                    "column": 26
                  },
                  "end": {
                    "offset": 216,
                    "line": 6,
                    "column": 32
                  }
                },
                "content": "John"
              }
            ],
            "age": 30
          }
        }
      },
      "raw": {
        "identifier": "person",
        "value": "{\n  \"name\": [\n    {\n      \"type\": \"Text\",\n      \"nodeId\": \"1eca1c98-2415-4fa9-bbc2-9f5af7776027\",\n      \"location\": {\n        \"start\": {\n          \"offset\": 210,\n          \"line\": 6,\n          \"column\": 26\n        },\n        \"end\": {\n          \"offset\": 216,\n          \"line\": 6,\n          \"column\": 32\n        }\n      },\n      \"content\": \"John\"\n    }\n  ],\n  \"age\": 30\n}"
      },
      "meta": {
        "objectData": {
          "propCount": 2
        }
      }
    },
    {
      "type": "Text",
      "nodeId": "ab9255e4-3cb3-43c8-9cf6-bb159488a748",
      "location": {
        "start": {
          "offset": 229,
          "line": 6,
          "column": 45
        },
        "end": {
          "offset": 405,
          "line": 12,
          "column": 19
        }
      },
      "content": "\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say "
    },
    {
      "type": "VariableReference",
      "nodeId": "5b7f5be3-3533-49f7-ad3e-fb3f7e0d6b4c",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 0,
          "line": 1,
          "column": 1
        }
      },
      "valueType": "varInterpolation",
      "identifier": "myvar"
    },
    {
      "type": "Text",
      "nodeId": "a95ef4fd-4f0e-47cb-918b-f215bac2e6ca",
      "location": {
        "start": {
          "offset": 414,
          "line": 12,
          "column": 28
        },
        "end": {
          "offset": 674,
          "line": 24,
          "column": 1
        }
      },
      "content": " - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "5f8574c2-2075-4181-8eb9-1c86dbb8f816",
      "location": {
        "start": {
          "offset": 674,
          "line": 24,
          "column": 1
        },
        "end": {
          "offset": 701,
          "line": 24,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "2fce755d-0c1f-495d-8048-a20fe30cd833",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "530c0abf-44c5-4f9f-9534-b0f229203b1c",
            "location": {
              "start": {
                "offset": 688,
                "line": 24,
                "column": 15
              },
              "end": {
                "offset": 701,
                "line": 24,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Text",
      "nodeId": "28086d65-ed9a-4365-8988-1feb06b962f7",
      "location": {
        "start": {
          "offset": 701,
          "line": 24,
          "column": 28
        },
        "end": {
          "offset": 744,
          "line": 27,
          "column": 1
        }
      },
      "content": "\n\nThis is some text. Now I'm going to say:\n"
    },
    {
      "type": "Directive",
      "nodeId": "510b0541-0dc9-441a-851c-e1c6134d5cf8",
      "location": {
        "start": {
          "offset": 744,
          "line": 27,
          "column": 1
        },
        "end": {
          "offset": 757,
          "line": 29,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "398a7c21-9159-4184-aa03-21c47142487c",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "myvar"
          }
        ]
      },
      "raw": {
        "variable": "@myvar"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "c3dbf94a-d1a3-4474-8b9b-2652b065a7f6",
      "location": {
        "start": {
          "offset": 757,
          "line": 29,
          "column": 1
        },
        "end": {
          "offset": 776,
          "line": 30,
          "column": 1
        }
      },
      "content": "Or with templates:\n"
    },
    {
      "type": "Directive",
      "nodeId": "e6023e4a-735d-4753-85a7-10a9961b845e",
      "location": {
        "start": {
          "offset": 776,
          "line": 30,
          "column": 1
        },
        "end": {
          "offset": 813,
          "line": 30,
          "column": 38
        }
      },
      "kind": "text",
      "subtype": "textTemplate",
      "source": "template",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "6be35996-f6e3-4cf9-8a62-0d9d23d00ac4",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "greeting"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "53a17210-9262-44b1-808d-b7d069d1f0a2",
            "location": {
              "start": {
                "offset": 795,
                "line": 30,
                "column": 20
              },
              "end": {
                "offset": 801,
                "line": 30,
                "column": 26
              }
            },
            "content": "Hello "
          },
          {
            "type": "VariableReference",
            "nodeId": "ce26b818-f61e-4e2b-afe4-fd9a86e1f57f",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varInterpolation",
            "identifier": "myvar"
          },
          {
            "type": "Text",
            "nodeId": "9c3a3984-153b-4bf1-aade-c43d85ac0dea",
            "location": {
              "start": {
                "offset": 810,
                "line": 30,
                "column": 35
              },
              "end": {
                "offset": 811,
                "line": 30,
                "column": 36
              }
            },
            "content": "!"
          }
        ]
      },
      "raw": {
        "identifier": "greeting",
        "content": "Hello {{myvar}}!"
      },
      "meta": {
        "sourceType": "template",
        "hasVariables": true,
        "isTemplateContent": true
      }
    },
    {
      "type": "Newline",
      "nodeId": "383ec7f1-4cb4-4937-8395-86457190a387",
      "location": {
        "start": {
          "offset": 813,
          "line": 30,
          "column": 38
        },
        "end": {
          "offset": 814,
          "line": 31,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "f9107505-a94a-432d-b7e1-56a803885b2f",
      "location": {
        "start": {
          "offset": 814,
          "line": 31,
          "column": 1
        },
        "end": {
          "offset": 830,
          "line": 33,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "dcb63da3-1d47-4e02-a295-a8a94c686a41",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "greeting"
          }
        ]
      },
      "raw": {
        "variable": "@greeting"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "52a2e4be-9429-4554-8002-f97899f539b5",
      "location": {
        "start": {
          "offset": 830,
          "line": 33,
          "column": 1
        },
        "end": {
          "offset": 1010,
          "line": 34,
          "column": 77
        }
      },
      "content": "The key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive."
    }
  ],
  "parseError": null
}