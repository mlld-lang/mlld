{
  "name": "invalid",
  "description": "Test fixture for valid/examples",
  "category": "valid",
  "subcategory": "examples",
  "input": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n@text myvar = \"Hello world\"\n@data person = { \"name\": \"John\", \"age\": 30 }\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say {{myvar}} - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n@text myvar = \"Hello world\"\n\nThis is some text. Now I'm going to say:\n@add @myvar\n\nOr with templates:\n@text greeting = [[Hello {{myvar}}!]]\n@add @greeting\n\nThe key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive.",
  "expected": null,
  "expectedError": null,
  "expectedWarning": null,
  "actualOutput": null,
  "ast": [
    {
      "type": "Text",
      "nodeId": "56758fd6-4e2d-4323-ac62-c3c07fff09ed",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 157,
          "line": 5,
          "column": 1
        }
      },
      "content": "# Common mlld Mistakes - Invalid Usage Examples\n\nThis file shows common mistakes that new mlld users make when trying to use mlld like a template language.\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "dc51baab-e1cd-45c2-bab8-9b257b34c771",
      "location": {
        "start": {
          "offset": 157,
          "line": 5,
          "column": 1
        },
        "end": {
          "offset": 184,
          "line": 5,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "dfca5864-c86b-4567-9c54-d815f541e36d",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "ccc3b58f-78f5-42e0-825e-9f801e51c738",
            "location": {
              "start": {
                "offset": 171,
                "line": 5,
                "column": 15
              },
              "end": {
                "offset": 184,
                "line": 5,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Newline",
      "nodeId": "6cc76426-1682-4bd6-b826-2a29ac19caca",
      "location": {
        "start": {
          "offset": 184,
          "line": 5,
          "column": 28
        },
        "end": {
          "offset": 185,
          "line": 6,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "31df102a-baff-46c8-85f7-530908d709b2",
      "location": {
        "start": {
          "offset": 185,
          "line": 6,
          "column": 1
        },
        "end": {
          "offset": 229,
          "line": 6,
          "column": 45
        }
      },
      "kind": "data",
      "subtype": "dataAssignment",
      "source": "object",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "a61bb687-963e-489d-beef-c3399c4a4e19",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "person"
          }
        ],
        "value": {
          "type": "object",
          "properties": {
            "name": [
              {
                "type": "Text",
                "nodeId": "251487cb-8901-4487-839d-d58dea78c671",
                "location": {
                  "start": {
                    "offset": 210,
                    "line": 6,
                    "column": 26
                  },
                  "end": {
                    "offset": 216,
                    "line": 6,
                    "column": 32
                  }
                },
                "content": "John"
              }
            ],
            "age": 30
          }
        }
      },
      "raw": {
        "identifier": "person",
        "value": "{\n  \"name\": [\n    {\n      \"type\": \"Text\",\n      \"nodeId\": \"251487cb-8901-4487-839d-d58dea78c671\",\n      \"location\": {\n        \"start\": {\n          \"offset\": 210,\n          \"line\": 6,\n          \"column\": 26\n        },\n        \"end\": {\n          \"offset\": 216,\n          \"line\": 6,\n          \"column\": 32\n        }\n      },\n      \"content\": \"John\"\n    }\n  ],\n  \"age\": 30\n}"
      },
      "meta": {
        "objectData": {
          "propCount": 2
        }
      }
    },
    {
      "type": "Text",
      "nodeId": "c0538621-ef05-44e8-a32f-5b07bd4da5ce",
      "location": {
        "start": {
          "offset": 229,
          "line": 6,
          "column": 45
        },
        "end": {
          "offset": 405,
          "line": 12,
          "column": 19
        }
      },
      "content": "\n\n## Mistake 1: Bare @ variable references\nThis is some text. Now I'm going to say @myvar - this WON'T work!\n\n## Mistake 2: Template syntax in regular text  \nOr maybe I'll say "
    },
    {
      "type": "VariableReference",
      "nodeId": "6245efe9-5b2b-49f6-8c63-50a9cb6c363d",
      "location": {
        "start": {
          "offset": 0,
          "line": 1,
          "column": 1
        },
        "end": {
          "offset": 0,
          "line": 1,
          "column": 1
        }
      },
      "valueType": "varInterpolation",
      "identifier": "myvar"
    },
    {
      "type": "Text",
      "nodeId": "45a7b059-3866-4acf-b32c-ae7641e959a8",
      "location": {
        "start": {
          "offset": 414,
          "line": 12,
          "column": 28
        },
        "end": {
          "offset": 674,
          "line": 24,
          "column": 1
        }
      },
      "content": " - this also WON'T work!\n\n## Mistake 3: Directive in middle of line\nSome text @add @myvar in the middle - this WON'T work either!\n\n## Mistake 4: Object field access in text\nThe person's name is @person.name - nope, still won't work!\n\n---\n\n## The CORRECT way:\n\n"
    },
    {
      "type": "Directive",
      "nodeId": "8c32f323-f02a-4bd7-985d-9c4aa3d4c752",
      "location": {
        "start": {
          "offset": 674,
          "line": 24,
          "column": 1
        },
        "end": {
          "offset": 701,
          "line": 24,
          "column": 28
        }
      },
      "kind": "text",
      "subtype": "textAssignment",
      "source": "literal",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "3061165c-4b93-46c7-bedc-9ba85bad4047",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "myvar"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "a631e35b-9c30-48d0-b221-6d79c433c73a",
            "location": {
              "start": {
                "offset": 688,
                "line": 24,
                "column": 15
              },
              "end": {
                "offset": 701,
                "line": 24,
                "column": 28
              }
            },
            "content": "Hello world"
          }
        ]
      },
      "raw": {
        "identifier": "myvar",
        "content": "Hello world"
      },
      "meta": {
        "sourceType": "literal",
        "hasVariables": false,
        "isTemplateContent": false
      }
    },
    {
      "type": "Text",
      "nodeId": "db5918f8-8dd0-47f1-a2d5-f28cc7b31fd5",
      "location": {
        "start": {
          "offset": 701,
          "line": 24,
          "column": 28
        },
        "end": {
          "offset": 744,
          "line": 27,
          "column": 1
        }
      },
      "content": "\n\nThis is some text. Now I'm going to say:\n"
    },
    {
      "type": "Directive",
      "nodeId": "26c85d85-e420-4e2e-98d8-f3d4c8d5e17d",
      "location": {
        "start": {
          "offset": 744,
          "line": 27,
          "column": 1
        },
        "end": {
          "offset": 757,
          "line": 29,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "4f16a0b0-adc4-4eb3-bb11-3ac5a8df7bf4",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "myvar"
          }
        ]
      },
      "raw": {
        "variable": "@myvar"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "37c8a0f5-611e-4758-9256-aba7cb8897fb",
      "location": {
        "start": {
          "offset": 757,
          "line": 29,
          "column": 1
        },
        "end": {
          "offset": 776,
          "line": 30,
          "column": 1
        }
      },
      "content": "Or with templates:\n"
    },
    {
      "type": "Directive",
      "nodeId": "a1580a06-325a-43ca-9f63-24d75cee2906",
      "location": {
        "start": {
          "offset": 776,
          "line": 30,
          "column": 1
        },
        "end": {
          "offset": 813,
          "line": 30,
          "column": 38
        }
      },
      "kind": "text",
      "subtype": "textTemplate",
      "source": "template",
      "values": {
        "identifier": [
          {
            "type": "VariableReference",
            "nodeId": "a59d7ba6-9115-4960-9aec-ba6f96bb133e",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "identifier",
            "identifier": "greeting"
          }
        ],
        "content": [
          {
            "type": "Text",
            "nodeId": "785064ef-5a3d-4547-ad06-fb2344639531",
            "location": {
              "start": {
                "offset": 795,
                "line": 30,
                "column": 20
              },
              "end": {
                "offset": 801,
                "line": 30,
                "column": 26
              }
            },
            "content": "Hello "
          },
          {
            "type": "VariableReference",
            "nodeId": "ddde84b8-f384-47e5-a144-5607aa77c6a8",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varInterpolation",
            "identifier": "myvar"
          },
          {
            "type": "Text",
            "nodeId": "ccd9ddf1-0633-4ea4-ba00-0670a894371d",
            "location": {
              "start": {
                "offset": 810,
                "line": 30,
                "column": 35
              },
              "end": {
                "offset": 811,
                "line": 30,
                "column": 36
              }
            },
            "content": "!"
          }
        ]
      },
      "raw": {
        "identifier": "greeting",
        "content": "Hello {{myvar}}!"
      },
      "meta": {
        "sourceType": "template",
        "hasVariables": true,
        "isTemplateContent": true
      }
    },
    {
      "type": "Newline",
      "nodeId": "5f171bbc-e093-4a50-a853-2c3da326491a",
      "location": {
        "start": {
          "offset": 813,
          "line": 30,
          "column": 38
        },
        "end": {
          "offset": 814,
          "line": 31,
          "column": 1
        }
      },
      "content": "\n"
    },
    {
      "type": "Directive",
      "nodeId": "7ed792f7-1514-46fd-b69b-3cdfc1074177",
      "location": {
        "start": {
          "offset": 814,
          "line": 31,
          "column": 1
        },
        "end": {
          "offset": 830,
          "line": 33,
          "column": 1
        }
      },
      "kind": "add",
      "subtype": "addVariable",
      "source": "variable",
      "values": {
        "variable": [
          {
            "type": "VariableReference",
            "nodeId": "36d8657a-99c0-47f7-8291-ec0c298d0280",
            "location": {
              "start": {
                "offset": 0,
                "line": 1,
                "column": 1
              },
              "end": {
                "offset": 0,
                "line": 1,
                "column": 1
              }
            },
            "valueType": "varIdentifier",
            "identifier": "greeting"
          }
        ]
      },
      "raw": {
        "variable": "@greeting"
      },
      "meta": {}
    },
    {
      "type": "Text",
      "nodeId": "cf9bc6a3-33bf-45a7-a076-12ce759e712a",
      "location": {
        "start": {
          "offset": 830,
          "line": 33,
          "column": 1
        },
        "end": {
          "offset": 1010,
          "line": 34,
          "column": 77
        }
      },
      "content": "The key insight: mlld is a **programming language embedded IN markdown**, not a **template language**. \nIt treats as plain text EVERY line that doesn't start with a mlld directive."
    }
  ],
  "parseError": null
}