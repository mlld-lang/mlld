{
  "scopeName": "markdown.mlld.injection",
  "injectionSelector": "text.html.markdown, text.html.markdown.source",
  "patterns": [
    {
      "begin": "^(@(data|text|run|add|path|import|exec)\\b)",
      "end": "$",
      "name": "meta.embedded.block.mlld",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.directive.mlld"
        }
      },
      "patterns": [
        {
          "name": "comment.line.double-slash.mlld",
          "match": ">>.*$"
        },
        {
          "name": "string.template.mlld",
          "begin": "\\[\\[",
          "end": "\\]\\]",
          "patterns": [
            {
              "name": "variable.template.mlld",
              "match": "\\{\\{[^}]+\\}\\}"
            }
          ]
        },
        {
          "name": "meta.path.mlld",
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "name": "markup.underline.link.mlld",
              "match": "https?://[^\\]]+"
            }
          ]
        },
        {
          "name": "string.quoted.double.mlld",
          "match": "\"[^\"]*\""
        },
        {
          "name": "variable.other.mlld",
          "match": "@\\w+"
        },
        {
          "name": "keyword.operator.mlld",
          "match": "\\b(from|as)\\b|="
        },
        {
          "name": "constant.numeric.mlld",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        },
        {
          "name": "constant.language.boolean.mlld",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.null.mlld",
          "match": "\\bnull\\b"
        }
      ]
    }
  ]
}