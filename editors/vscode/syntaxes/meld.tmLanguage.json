{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Meld",
  "scopeName": "source.meld",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#directives"
    },
    {
      "include": "#markdown"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-angle.meld",
          "match": "^\\s*(>>).*$",
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.meld"
            }
          }
        }
      ]
    },
    "directives": {
      "patterns": [
        {
          "include": "#text-directive"
        },
        {
          "include": "#data-directive"
        },
        {
          "include": "#path-directive"
        },
        {
          "include": "#run-directive"
        },
        {
          "include": "#exec-directive"
        },
        {
          "include": "#add-directive"
        },
        {
          "include": "#import-directive"
        }
      ]
    },
    "text-directive": {
      "patterns": [
        {
          "name": "meta.directive.text.meld",
          "begin": "(@text)\\s+(\\w+)\\s*(=)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.directive.text.meld"
            },
            "2": {
              "name": "variable.other.meld"
            },
            "3": {
              "name": "keyword.operator.assignment.meld"
            }
          },
          "end": "(?=^(?!\\s)|^\\s*@|^\\s*>>)",
          "patterns": [
            {
              "include": "#text-value"
            }
          ]
        }
      ]
    },
    "data-directive": {
      "patterns": [
        {
          "name": "meta.directive.data.meld",
          "begin": "(@data)\\s+([\\w\\.]+)\\s*(=)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.directive.data.meld"
            },
            "2": {
              "name": "variable.other.meld"
            },
            "3": {
              "name": "keyword.operator.assignment.meld"
            }
          },
          "end": "(?=^(?!\\s)|^\\s*@|^\\s*>>)",
          "patterns": [
            {
              "include": "#data-value"
            }
          ]
        }
      ]
    },
    "path-directive": {
      "patterns": [
        {
          "name": "meta.directive.path.meld",
          "match": "(@path)\\s+(\\w+)\\s*(=)\\s*(.+)$",
          "captures": {
            "1": {
              "name": "keyword.control.directive.path.meld"
            },
            "2": {
              "name": "variable.other.meld"
            },
            "3": {
              "name": "keyword.operator.assignment.meld"
            },
            "4": {
              "name": "string.unquoted.path.meld"
            }
          }
        }
      ]
    },
    "run-directive": {
      "patterns": [
        {
          "name": "meta.directive.run.meld",
          "begin": "(@run)\\s+(\\w+)\\s*(=)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.directive.run.meld"
            },
            "2": {
              "name": "variable.other.meld"
            },
            "3": {
              "name": "keyword.operator.assignment.meld"
            }
          },
          "end": "(?=^(?!\\s)|^\\s*@|^\\s*>>)",
          "patterns": [
            {
              "include": "#code-block"
            }
          ]
        }
      ]
    },
    "exec-directive": {
      "patterns": [
        {
          "name": "meta.directive.exec.meld",
          "begin": "(@exec)\\s+(\\w+)\\s*(=)",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.directive.exec.meld"
            },
            "2": {
              "name": "variable.other.meld"
            },
            "3": {
              "name": "keyword.operator.assignment.meld"
            }
          },
          "end": "(?=^(?!\\s)|^\\s*@|^\\s*>>)",
          "patterns": [
            {
              "include": "#code-block"
            }
          ]
        }
      ]
    },
    "add-directive": {
      "patterns": [
        {
          "name": "meta.directive.add.template.meld",
          "begin": "(@add)\\s+(template)\\s+(\\w+)\\s*(\\(([^)]*)\\))?",
          "beginCaptures": {
            "1": {
              "name": "keyword.control.directive.add.meld"
            },
            "2": {
              "name": "keyword.other.template.meld"
            },
            "3": {
              "name": "entity.name.function.meld"
            },
            "5": {
              "name": "variable.parameter.meld"
            }
          },
          "end": "(?=^(?!\\s)|^\\s*@|^\\s*>>)",
          "patterns": [
            {
              "include": "#template-content"
            }
          ]
        },
        {
          "name": "meta.directive.add.section.meld",
          "match": "(@add)\\s+\"([^\"]+)\"\\s+(from)\\s+\\[([^\\]]+)\\]",
          "captures": {
            "1": {
              "name": "keyword.control.directive.add.meld"
            },
            "2": {
              "name": "string.quoted.double.section-name.meld"
            },
            "3": {
              "name": "keyword.other.from.meld"
            },
            "4": {
              "name": "string.unquoted.path.meld"
            }
          }
        },
        {
          "name": "meta.directive.add.path.meld",
          "match": "(@add)\\s+\\[([^\\]]+)\\]",
          "captures": {
            "1": {
              "name": "keyword.control.directive.add.meld"
            },
            "2": {
              "name": "string.unquoted.path.meld"
            }
          }
        },
        {
          "name": "meta.directive.add.template-invocation.meld",
          "match": "(@add)\\s+(\\w+)\\s*(\\(([^)]*)\\))?",
          "captures": {
            "1": {
              "name": "keyword.control.directive.add.meld"
            },
            "2": {
              "name": "entity.name.function.meld"
            },
            "4": {
              "name": "variable.parameter.meld"
            }
          }
        }
      ]
    },
    "import-directive": {
      "patterns": [
        {
          "name": "meta.directive.import.all.meld",
          "match": "(@import)\\s+\\*\\s+(from)\\s+\\[([^\\]]+)\\]",
          "captures": {
            "1": {
              "name": "keyword.control.directive.import.meld"
            },
            "2": {
              "name": "keyword.other.from.meld"
            },
            "3": {
              "name": "string.unquoted.path.meld"
            }
          }
        },
        {
          "name": "meta.directive.import.selected.meld",
          "match": "(@import)\\s+\\{([^}]+)\\}\\s+(from)\\s+\\[([^\\]]+)\\]",
          "captures": {
            "1": {
              "name": "keyword.control.directive.import.meld"
            },
            "2": {
              "name": "variable.other.meld"
            },
            "3": {
              "name": "keyword.other.from.meld"
            },
            "4": {
              "name": "string.unquoted.path.meld"
            }
          }
        }
      ]
    },
    "text-value": {
      "patterns": [
        {
          "name": "string.quoted.double.meld",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.meld",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.meld",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.meld",
              "match": "\\\\."
            }
          ]
        },
        {
          "include": "#template-content"
        },
        {
          "include": "#path-reference"
        },
        {
          "include": "#run-reference"
        },
        {
          "include": "#section-rename"
        }
      ]
    },
    "data-value": {
      "patterns": [
        {
          "include": "#json-value"
        }
      ]
    },
    "json-value": {
      "patterns": [
        {
          "name": "constant.language.meld",
          "match": "\\b(true|false|null)\\b"
        },
        {
          "name": "constant.numeric.meld",
          "match": "-?\\b\\d+(\\.\\d+)?([eE][+-]?\\d+)?\\b"
        },
        {
          "name": "string.quoted.double.json.meld",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.meld",
              "match": "\\\\."
            }
          ]
        },
        {
          "begin": "\\{",
          "end": "\\}",
          "patterns": [
            {
              "include": "#json-object-content"
            }
          ]
        },
        {
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "include": "#json-value"
            }
          ]
        }
      ]
    },
    "json-object-content": {
      "patterns": [
        {
          "name": "meta.object-member.meld",
          "match": "(\"[^\"]*\")\\s*(:)",
          "captures": {
            "1": {
              "name": "support.type.property-name.json.meld"
            },
            "2": {
              "name": "punctuation.separator.dictionary.key-value.json.meld"
            }
          }
        },
        {
          "include": "#json-value"
        }
      ]
    },
    "code-block": {
      "patterns": [
        {
          "name": "meta.embedded.block.shell.meld",
          "begin": "```(bash|sh|shell)?\\s*$",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.code.meld"
            },
            "1": {
              "name": "constant.other.language.meld"
            }
          },
          "end": "^\\s*```\\s*$",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.code.meld"
            }
          },
          "patterns": [
            {
              "include": "source.shell"
            }
          ]
        },
        {
          "name": "meta.embedded.block.javascript.meld",
          "begin": "```(javascript|js|node)?\\s*$",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.code.meld"
            },
            "1": {
              "name": "constant.other.language.meld"
            }
          },
          "end": "^\\s*```\\s*$",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.code.meld"
            }
          },
          "patterns": [
            {
              "include": "source.js"
            }
          ]
        },
        {
          "name": "string.unquoted.code.meld",
          "match": ".+"
        }
      ]
    },
    "template-content": {
      "patterns": [
        {
          "name": "meta.template.meld",
          "begin": "\\[\\[",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.template.begin.meld"
            }
          },
          "end": "\\]\\]",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.template.end.meld"
            }
          },
          "patterns": [
            {
              "include": "#variable-interpolation"
            }
          ]
        }
      ]
    },
    "variable-interpolation": {
      "patterns": [
        {
          "name": "variable.other.interpolation.meld",
          "match": "\\{\\{(\\w+)\\}\\}",
          "captures": {
            "1": {
              "name": "variable.other.meld"
            }
          }
        }
      ]
    },
    "path-reference": {
      "patterns": [
        {
          "name": "meta.path-reference.section.meld",
          "begin": "\\[([^\\]#]+)(#)([^\\]]+)\\]",
          "beginCaptures": {
            "1": {
              "name": "string.unquoted.path.meld"
            },
            "2": {
              "name": "punctuation.separator.section.meld"
            },
            "3": {
              "name": "entity.name.section.meld"
            }
          },
          "end": "(?=\\s*(?:as\\s+\"|$))",
          "patterns": [
            {
              "include": "#section-rename"
            }
          ]
        },
        {
          "name": "meta.path-reference.meld",
          "match": "\\[([^\\]]+)\\]",
          "captures": {
            "1": {
              "name": "string.unquoted.path.meld"
            }
          }
        }
      ]
    },
    "section-rename": {
      "patterns": [
        {
          "name": "meta.section-rename.meld",
          "match": "(as)\\s+(\"[^\"]+\")",
          "captures": {
            "1": {
              "name": "keyword.other.as.meld"
            },
            "2": {
              "name": "string.quoted.double.section-name.meld"
            }
          }
        }
      ]
    },
    "run-reference": {
      "patterns": [
        {
          "name": "meta.run-reference.meld",
          "match": "(@)(\\w+)",
          "captures": {
            "1": {
              "name": "punctuation.definition.variable.meld"
            },
            "2": {
              "name": "variable.other.meld"
            }
          }
        }
      ]
    },
    "markdown": {
      "patterns": [
        {
          "include": "text.html.markdown"
        }
      ]
    }
  }
}