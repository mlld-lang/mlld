---
layout: base.njk
---

<div class="docs-layout">
  <button class="docs-sidebar-toggle" aria-label="Toggle menu" aria-expanded="false">
    <span class="hamburger-icon">
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
      <span class="hamburger-line"></span>
    </span>
    <span class="toggle-text">Menu</span>
  </button>
  
  <!-- Add overlay for mobile --> 
  <div class="docs-overlay" id="docs-overlay"></div>
  
  <aside class="docs-sidebar" id="docs-sidebar">
    <nav>
      <h3>Documentation</h3>
      <ul class="nav-list">
        <li><a href="/docs/introduction/" {{ "/docs/introduction/" | isActive(page.url) }}>Introduction</a></li>
        {% for docPage in collections.docs %}
          {% if not docPage.url.includes('/directives/') and 
                not docPage.url.includes('/index.html') and 
                not docPage.url.includes('/introduction/') and
                docPage.url != '/docs/' %}
            <li><a href="{{ docPage.url }}" {{ docPage.url | isActive(page.url) }}>{{ docPage.data.title }}</a></li>
          {% endif %}
        {% endfor %}
        
        <li>
          <h4>Directives</h4>
          <ul class="nav-list">
            <li><a href="/docs/directives/" {{ "/docs/directives/" | isActive(page.url) }}>Overview</a></li>
            {% for docPage in collections.docs %}
              {% if docPage.url.includes('/directives/') and 
                    not docPage.url.endsWith('/directives/') and 
                    not docPage.url.endsWith('/directives/index.html') %}
                {% set directiveName = docPage.url.split('/').slice(-2)[0] %}
                <li><a href="{{ docPage.url }}" {{ docPage.url | isActive(page.url) }}>
                  {% if directiveName.startsWith('@') %}
                    {{ directiveName }}
                  {% else %}
                    @{{ directiveName }}
                  {% endif %}
                </a></li>
              {% endif %}
            {% endfor %}
          </ul>
        </li>
      </ul>
    </nav>
  </aside>
  
  <div class="docs-content">
    <h1>⚠️</h1>
    <p>Docs are <strong>badly</strong> outdated due to mlld changing syntax design 4 times during development. <a href="https://discord.gg/mlld">Join the discord</a> if you have questions. <a href="https://github.com/mlld/mlld/issues">Report bugs on GitHub</a>. Refer to examples on the home page to see current syntax design.</p>
    {{ content | safe }}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const toggleButton = document.querySelector('.docs-sidebar-toggle');
    const sidebar = document.getElementById('docs-sidebar');
    const overlay = document.getElementById('docs-overlay');
    
    // Function to toggle the sidebar
    function toggleSidebar() {
      const isExpanded = toggleButton.getAttribute('aria-expanded') === 'true';
      toggleButton.setAttribute('aria-expanded', !isExpanded);
      sidebar.classList.toggle('open');
      
      // Toggle overlay
      overlay.classList.toggle('active');
      
      // Lock/unlock body scroll when sidebar is open on mobile
      if (window.innerWidth <= 950) {
        document.body.classList.toggle('sidebar-open', !isExpanded);
      }
    }
    
    // Add click event for toggle button
    toggleButton.addEventListener('click', toggleSidebar);
    
    // Add click event for overlay to close sidebar
    overlay.addEventListener('click', function() {
      if (sidebar.classList.contains('open')) {
        toggleSidebar();
      }
    });
    
    // Close sidebar when clicking on a link (mobile only)
    sidebar.querySelectorAll('a').forEach(link => {
      link.addEventListener('click', function() {
        if (window.innerWidth <= 950 && sidebar.classList.contains('open')) {
          toggleSidebar();
        }
      });
    });
    
    // Close sidebar when clicking outside of it (mobile only) - now handled by overlay
    document.addEventListener('click', function(event) {
      if (window.innerWidth <= 950 && 
          sidebar.classList.contains('open') && 
          !sidebar.contains(event.target) && 
          !toggleButton.contains(event.target) &&
          !overlay.contains(event.target)) {
        toggleSidebar();
      }
    });
  });
</script>