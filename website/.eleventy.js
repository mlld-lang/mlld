const markdownIt = require("markdown-it"); const markdownItAnchor = require("markdown-it-anchor"); module.exports = function(eleventyConfig) { const markdownLib = markdownIt({ html: true, breaks: true, linkify: true }).use(markdownItAnchor); eleventyConfig.setLibrary("md", markdownLib); eleventyConfig.addPassthroughCopy("css"); eleventyConfig.addPassthroughCopy("js"); eleventyConfig.addPassthroughCopy("images"); eleventyConfig.addFilter("isActive", function(pageUrl, currentUrl) { return currentUrl.startsWith(pageUrl) ? "aria-current=\"page\"" : ""; }); eleventyConfig.addShortcode("year", () => `${new Date().getFullYear()}`); const nunjucksEnvironment = require("nunjucks").configure(); nunjucksEnvironment.addExtension("IgnoreRawTags", new function() { this.tags = ["raw"]; this.parse = function(parser, nodes, lexer) { var tok = parser.nextToken(); var args = parser.parseSignature(null, true); parser.advanceAfterBlockEnd(tok.value); var body = parser.parseUntilBlocks("endraw"); parser.advanceAfterBlockEnd(); return new nodes.Output([new nodes.TemplateData(body.children[0].value)]); }; }); return { dir: { input: "src", output: "_site", includes: "_includes", data: "_data" }, templateFormats: ["md", "njk"], markdownTemplateEngine: false, htmlTemplateEngine: "njk", dataTemplateEngine: "njk" }; };
