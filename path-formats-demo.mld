# Path Formats Demo

This file demonstrates the various path formats supported by Meld after the PATH-SIMPLIFY implementation.

## Special Path Variables (Recommended for Cross-Platform)

@path projectDocs = "$PROJECTPATH/docs"
@path projectAlt = "$./docs"
@path homeDir = "$HOMEPATH/meld"
@path homeAlt = "$~/meld"

## Standard Paths (Now Supported)

@path absolutePath = "/usr/local/bin"
@path relativePath = "relative/path/file.txt"
@path currentDirPath = "./current/dir/file.txt"
@path parentDirPath = "../parent/dir/file.txt"

## Using Path Variables

@text filename = "example.txt"
@path templateWithVar = "$PROJECTPATH/templates/{{filename}}"

## Embedding Content Using Different Path Formats

@text heading = "The content below uses different path formats:"

{{heading}}

// Using special path variables:
@embed [$projectDocs/README.md]

// Using a relative path:
@embed [./README.md]

// Using parent directory reference:
@embed [../README.md]

## Running Commands with Different Path Formats

// Using special path variable:
@run [ls -la $projectDocs]

// Using standard relative path:
@run [ls -la ./docs]

// Using parent directory reference:
@run [ls -la ../docs]

// Using absolute path:
@run [ls -la /tmp]

## Path Recommendations

While Meld now supports all standard path formats, we recommend using the special path variables 
($PROJECTPATH, $., $HOMEPATH, $~) for best cross-platform compatibility. This ensures your Meld
files will work consistently across different operating systems and environments.