name: group-requirements
description: "Group and synthesize requirements for @run subtypes, execution, and validation separately."
# No for_each, runs once after all feedback is gathered.

tasks:
  - useTask: synthesize-subtype-reqs
    prior_outputs:
      # Map specific component feedback using [Key] syntax
      RunHandlerCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[RunHandlerCore].output }}"
      BasicCommandHandlerFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[BasicCommandHandler].output }}"
      LanguageCommandHandlerFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[LanguageCommandHandler].output }}"
      DefinedCommandHandlerFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[DefinedCommandHandler].output }}"

  - useTask: synthesize-execution-reqs
    prior_outputs:
      # Map specific component feedback using [Key] syntax
      CommandExecutionServiceFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[CommandExecutionService].output }}"
      ResolutionCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[ResolutionCore].output }}"
      StateCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[StateCore].output }}"
      FileSystemCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[FileSystemCore].output }}"

  - useTask: synthesize-validation-reqs
    prior_outputs:
      # Map specific component feedback using [Key] syntax
      RunValidationFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[RunValidation].output }}"
      RunHandlerCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[RunHandlerCore].output }}" 