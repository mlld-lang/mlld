name: meld-typespec-run-design
description: "Generates type specification for the '@run' directive incorporating feedback from relevant services."
outputPath: output

files:
  # General Context
  architectureDocs:
    - ../../docs/dev/DI-ARCHITECTURE.md
    - ../../docs/dev/PIPELINE.md
  directiveClarityDoc: ../../_dev/RUN-CLARITY.md

  # Component-Specific Files (Focus on @run)
  CoreDirectiveCode: # General Directive context
    - ../../services/pipeline/DirectiveService/DirectiveService.ts
    - ../../services/pipeline/DirectiveService/IDirectiveService.ts
    - ../../services/pipeline/DirectiveService/interfaces/DirectiveTypes.ts

  RunHandlerCoreCode: # Main handler and classifier
    - ../../services/pipeline/DirectiveService/handlers/execution/RunDirectiveHandler.ts
    - ../../services/pipeline/DirectiveService/handlers/execution/utils/RunDirectiveClassifier.ts

  BasicCommandHandlerCode:
    - ../../services/pipeline/DirectiveService/handlers/execution/handlers/BasicCommandHandler.ts
    - ../../services/pipeline/DirectiveService/handlers/execution/handlers/BaseRunHandler.ts # Base class

  LanguageCommandHandlerCode:
    - ../../services/pipeline/DirectiveService/handlers/execution/handlers/LanguageCommandHandler.ts
    - ../../services/pipeline/DirectiveService/handlers/execution/handlers/BaseRunHandler.ts # Base class

  DefinedCommandHandlerCode:
    - ../../services/pipeline/DirectiveService/handlers/execution/handlers/DefinedCommandHandler.ts
    - ../../services/pipeline/DirectiveService/handlers/execution/handlers/BaseRunHandler.ts # Base class
  
  CommandExecutionServiceCode:
     - ../../services/pipeline/DirectiveService/handlers/execution/services/CommandExecutionService.ts
     - ../../services/pipeline/DirectiveService/handlers/execution/services/ICommandExecutionService.ts

  RunValidationCode:
     - ../../services/pipeline/ValidationService/validators/RunDirectiveValidator.ts

  # Supporting Services (Core files)
  ResolutionCoreCode:
    - ../../services/pipeline/ResolutionService/ResolutionService.ts
    - ../../services/pipeline/ResolutionService/IResolutionService.ts
  
  StateCoreCode:
    - ../../services/state/StateService/StateService.ts
    - ../../services/state/StateService/IStateService.ts
  
  FileSystemCoreCode:
    - ../../services/fs/FileSystemService/FileSystemService.ts
    - ../../services/fs/FileSystemService/IFileSystemService.ts

global_variables:
  overallArchitecture: "{{ files.architectureDocs }}"
  directiveName: "run"
  directiveClarityContent: "{{ files.directiveClarityDoc }}"

iterable_objects:
  services:
    CoreDirective:
      description: "Core directive handling context"
      codeContent: "{{ files.CoreDirectiveCode }}"

    RunHandlerCore:
      description: "Main @run handler and subtype classifier"
      codeContent: "{{ files.RunHandlerCoreCode }}"

    BasicCommandHandler:
      description: "Handler for basic @run [command] / @run [[command]]"
      codeContent: "{{ files.BasicCommandHandlerCode }}"

    LanguageCommandHandler:
      description: "Handler for @run language(...) [[...]]"
      codeContent: "{{ files.LanguageCommandHandlerCode }}"

    DefinedCommandHandler:
      description: "Handler for @run $definedCommand(...)"
      codeContent: "{{ files.DefinedCommandHandlerCode }}"
      
    CommandExecutionService:
      description: "Service responsible for executing shell commands"
      codeContent: "{{ files.CommandExecutionServiceCode }}"

    RunValidation:
      description: "Validation rules specific to the @run directive"
      codeContent: "{{ files.RunValidationCode }}"

    ResolutionCore:
      description: "Core resolution service functionality (variables in commands)"
      codeContent: "{{ files.ResolutionCoreCode }}"
    
    StateCore:
      description: "Core state management (for variables used in commands)"
      codeContent: "{{ files.StateCoreCode }}"
    
    FileSystemCore:
      description: "Core filesystem operations (for temp scripts in multiline/language commands)"
      codeContent: "{{ files.FileSystemCoreCode }}"

sets:
  # Sequence defined in CMTE-PLAN.md, with added grouping set:
  - useSet: gather-requirements
  - useSet: group-requirements     # NEW: Group synthesis step
  - useSet: synthesize-requirements # Now consolidates grouped outputs
  - useSet: draft-spec
  - useSet: collect-draft-feedback
  - useSet: refine-spec 