name: meld-audit-ast-usage
description: "Analyzes service and test code for required changes due to AST updates (using raw/values, removing command/structured) based on syntax fixtures."
outputPath: output # Relative to workflow.yaml

files:
  # --- AST Context ---
  astGrammar: ../../core/ast/grammar/meld.pegjs
  astDocs:
    - ../../docs/dev/AST.md
    - ../../docs/dev/SYNTAX.md
  astPlans:
    - ../../_plans/AST-VARIABLES-done.md
    - ../../_plans/AST-INTERPVALS.md
  fixtureData: ../../core/syntax/types/fixtures/data.ts
  fixtureDefine: ../../core/syntax/types/fixtures/define.ts
  fixtureEmbed: ../../core/syntax/types/fixtures/embed.ts
  fixtureImport: ../../core/syntax/types/fixtures/import.ts
  fixtureRun: ../../core/syntax/types/fixtures/run.ts
  fixtureText: ../../core/syntax/types/fixtures/text.ts

  # --- Service Implementations ---
  parserServiceImpl: ../../services/pipeline/ParserService/ParserService.ts
  resolutionServiceImpl: ../../services/resolution/ResolutionService/ResolutionService.ts
  validationServiceImpl: ../../services/resolution/ValidationService/ValidationService.ts
  stateServiceImpl: ../../services/state/StateService/StateService.ts
  validators: # Include all specific validators
    - ../../services/resolution/ValidationService/validators/DataDirectiveValidator.ts
    - ../../services/resolution/ValidationService/validators/DefineDirectiveValidator.ts
    - ../../services/resolution/ValidationService/validators/EmbedDirectiveValidator.ts
    - ../../services/resolution/ValidationService/validators/FuzzyMatchingValidator.ts
    - ../../services/resolution/ValidationService/validators/ImportDirectiveValidator.ts
    - ../../services/resolution/ValidationService/validators/PathDirectiveValidator.ts
    - ../../services/resolution/ValidationService/validators/RunDirectiveValidator.ts
    - ../../services/resolution/ValidationService/validators/TextDirectiveValidator.ts

  # --- Handler Implementations ---
  handlerDataImpl: ../../services/pipeline/DirectiveService/handlers/definition/DataDirectiveHandler.ts
  handlerDefineImpl: ../../services/pipeline/DirectiveService/handlers/definition/DefineDirectiveHandler.ts
  handlerPathImpl: ../../services/pipeline/DirectiveService/handlers/definition/PathDirectiveHandler.ts
  handlerTextImpl: ../../services/pipeline/DirectiveService/handlers/definition/TextDirectiveHandler.ts
  handlerEmbedImpl: ../../services/pipeline/DirectiveService/handlers/execution/EmbedDirectiveHandler.ts
  handlerImportImpl: ../../services/pipeline/DirectiveService/handlers/execution/ImportDirectiveHandler.ts
  handlerRunImpl: ../../services/pipeline/DirectiveService/handlers/execution/RunDirectiveHandler.ts

  # --- Service Tests ---
  parserServiceTest: ../../services/pipeline/ParserService/ParserService.test.ts
  resolutionServiceTest: ../../services/resolution/ResolutionService/ResolutionService.test.ts
  validationServiceTest: ../../services/resolution/ValidationService/ValidationService.test.ts
  stateServiceTest: ../../services/state/StateService/StateService.test.ts

  # --- Handler Tests ---
  handlerDataTest: ../../services/pipeline/DirectiveService/handlers/definition/DataDirectiveHandler.test.ts
  # DefineDirectiveHandler.test.ts MISSING
  handlerPathTest: ../../services/pipeline/DirectiveService/handlers/definition/PathDirectiveHandler.test.ts
  handlerTextTest: ../../services/pipeline/DirectiveService/handlers/definition/TextDirectiveHandler.test.ts
  handlerEmbedTest: ../../services/pipeline/DirectiveService/handlers/execution/EmbedDirectiveHandler.test.ts
  handlerImportTest: ../../services/pipeline/DirectiveService/handlers/execution/ImportDirectiveHandler.test.ts
  handlerRunTest: ../../services/pipeline/DirectiveService/handlers/execution/RunDirectiveHandler.test.ts

global_variables:
  astGrammarContent: "{{ files.astGrammar }}"
  astDocsContent: "{{ files.astDocs }}"
  astPlansContent: "{{ files.astPlans }}"
  fixturesContentData: "{{ files.fixtureData }}"
  fixturesContentDefine: "{{ files.fixtureDefine }}"
  fixturesContentEmbed: "{{ files.fixtureEmbed }}"
  fixturesContentImport: "{{ files.fixtureImport }}"
  fixturesContentRun: "{{ files.fixtureRun }}"
  fixturesContentText: "{{ files.fixtureText }}"
  validatorsContent: "{{ files.validators }}" # Content of all validator files
  overallGoal: "Audit service/test code for compatibility with new AST structure (raw/values, no command/structured) using fixtures as reference. Identify specific code locations needing updates."

iterable_objects:
  serviceComponents:
    - name: ParserService
      implFileContent: "{{ files.parserServiceImpl }}"
      testFileContent: "{{ files.parserServiceTest }}"
      relevantFixtureContent: "" # Parser creates AST, doesn't consume a specific type like handlers
    - name: ResolutionService
      implFileContent: "{{ files.resolutionServiceImpl }}"
      testFileContent: "{{ files.resolutionServiceTest }}"
      relevantFixtureContent: "" # Focuses on InterpolatedValue, not a single directive fixture
    - name: ValidationService
      implFileContent: "{{ files.validationServiceImpl }}"
      testFileContent: "{{ files.validationServiceTest }}"
      relevantFixtureContent: "" # Uses individual validators (provided globally)
    - name: StateService
      implFileContent: "{{ files.stateServiceImpl }}"
      testFileContent: "{{ files.stateServiceTest }}"
      relevantFixtureContent: "{{ fixturesContentDefine }}" # State primarily deals with variable definitions
    - name: DataDirectiveHandler
      implFileContent: "{{ files.handlerDataImpl }}"
      testFileContent: "{{ files.handlerDataTest }}"
      relevantFixtureContent: "{{ fixturesContentData }}"
    - name: DefineDirectiveHandler
      implFileContent: "{{ files.handlerDefineImpl }}"
      testFileContent: "" # Test file missing
      relevantFixtureContent: "{{ fixturesContentDefine }}"
    - name: PathDirectiveHandler
      implFileContent: "{{ files.handlerPathImpl }}"
      testFileContent: "{{ files.handlerPathTest }}"
      relevantFixtureContent: "" # No specific path fixture, relies on PathDirectiveData structure
    - name: TextDirectiveHandler
      implFileContent: "{{ files.handlerTextImpl }}"
      testFileContent: "{{ files.handlerTextTest }}"
      relevantFixtureContent: "{{ fixturesContentText }}"
    - name: EmbedDirectiveHandler
      implFileContent: "{{ files.handlerEmbedImpl }}"
      testFileContent: "{{ files.handlerEmbedTest }}"
      relevantFixtureContent: "{{ fixturesContentEmbed }}"
    - name: ImportDirectiveHandler
      implFileContent: "{{ files.handlerImportImpl }}"
      testFileContent: "{{ files.handlerImportTest }}"
      relevantFixtureContent: "{{ fixturesContentImport }}"
    - name: RunDirectiveHandler
      implFileContent: "{{ files.handlerRunImpl }}"
      testFileContent: "{{ files.handlerRunTest }}"
      relevantFixtureContent: "{{ fixturesContentRun }}"

sets:
  - useSet: analyze-component # Iterate over serviceComponents
    for_each: serviceComponents
  - useSet: synthesize-findings # Run once after iteration