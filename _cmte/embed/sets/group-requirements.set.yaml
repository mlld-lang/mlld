name: group-requirements
description: "Group and synthesize requirements for @embed subtypes, execution context, and validation separately."
# No for_each, runs once after all feedback is gathered.

tasks:
  # Task for synthesizing the core subtype structures
  - useTask: synthesize-subtype-reqs 
    prior_outputs:
      CoreDirectiveFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[CoreDirective].output }}"
      EmbedHandlerFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[EmbedHandler].output }}"
      ParserCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[ParserCore].output }}"

  # Task for synthesizing requirements related to execution context (variable/path resolution)
  - useTask: synthesize-execution-reqs 
    prior_outputs:
      EmbedHandlerFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[EmbedHandler].output }}" # Handles different contexts
      ResolutionCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[ResolutionCore].output }}"
      VariableResolutionFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[VariableResolution].output }}"
      ContentResolutionFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[ContentResolution].output }}"
      FileSystemCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[FileSystemCore].output }}" # Path embeds
      StateCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[StateCore].output }}" # Variable embeds
      InterpreterCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[InterpreterCore].output }}" # General context

  # Task for synthesizing validation requirements
  - useTask: synthesize-validation-reqs
    prior_outputs:
      EmbedHandlerFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[EmbedHandler].output }}" # Implies validation
      ParserCoreFeedback: "{{ gather-requirements.analyze-service-needs-for-directive[ParserCore].output }}" # Syntax validation 