{
  "name": "mlld",
  "version": "2.0.0-rc49",
  "description": "mlld: llm scripting language",
  "type": "module",
  "main": "dist/index.cjs",
  "module": "dist/index.mjs",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "import": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.mjs"
      },
      "require": {
        "types": "./dist/index.d.ts",
        "default": "./dist/index.cjs"
      }
    }
  },
  "bin": {
    "mlld": "bin/mlld-wrapper.cjs",
    "mlldx": "bin/mlldx-wrapper.cjs"
  },
  "files": [
    "dist/",
    "bin/",
    "README.md",
    "LICENSE",
    "CHANGELOG.md",
    "package.json"
  ],
  "scripts": {
    "cli": "node ./dist/cli.cjs",
    "dev": "npm run cli",
    "mlld": "npm run cli",
    "build:grammar:core": "npx tsc -p grammar/tsconfig.grammar.json && node grammar/build-grammar.mjs",
    "build:grammar:fixtures": "node ./scripts/build-fixtures.mjs",
    "build:grammar:syntax": "node grammar/syntax-generator/build-syntax-conditional.js",
    "build:grammar:syntax:force": "FORCE_SYNTAX_BUILD=true node grammar/syntax-generator/build-syntax-conditional.js",
    "build:grammar": "npm run build:grammar:core && npm run build:grammar:fixtures && npm run build:grammar:syntax",
    "build:fixtures": "npm run build:errors && npm run build:grammar:fixtures",
    "build:syntax": "npm run build:grammar:syntax",
    "build:syntax:force": "npm run build:grammar:syntax:force",
    "build:errors": "node ./scripts/build-parse-errors.js && node ./scripts/build-js-errors.js",
    "build:js-errors": "node ./scripts/build-js-errors.js",
    "build:version": "node ./scripts/generate-version.js",
    "build:outputs": "node ./scripts/generate-outputs.mjs",
    "build:outputs:keep": "KEEP_OUTPUT=true node ./scripts/generate-outputs.mjs",
    "build:python": "node lib/mlld-python/scripts/sync-version.js",
    "build:wasm": "node ./scripts/copy-wasm-files.js",
    "build:direct": "npm run build:version && npm run build:errors && npm run build:grammar && tsup && npm run build:python && npm run build:wasm",
    "build:verbose": "node ./scripts/build-wrapper.js && npm run sync:mlldx",
    "build": "node ./scripts/build-quiet.js",
    "build:silent": "(node ./scripts/build-quiet.js > /tmp/build.log 2>&1 && echo '✅ Build completed successfully') || (echo '❌ Build failed. Check /tmp/build.log for details' && exit 1)",
    "ast:direct": "npm run build:grammar:core && node ./scripts/ast-output.js",
    "ast": "node ./scripts/ast-wrapper.js",
    "ast:debug": "DEBUG_MLLD_GRAMMAR=1 npm run ast --",
    "reinstall": "node scripts/install-local.cjs",
    "reinstall:clean": "node scripts/clean-local.cjs",
    "prepare-main": "node prepare-main.js",
    "pretest": "npm run build",
    "test": "NODE_ENV=test MLLD_NO_STREAMING=true vitest run --reporter=dot --silent",
    "test:verbose": "vitest run",
    "test:failures": "NODE_ENV=test MLLD_NO_STREAMING=true vitest run --reporter=dot --silent passed-only",
    "test:dots": "NODE_ENV=test MLLD_NO_STREAMING=true vitest run --reporter=dot",
    "test:silent": "vitest run --reporter=json --outputFile=/tmp/test-results.json 2>/dev/null && echo '✓ All tests passed' || (echo '✗ Tests failed. Run npm test for details' && exit 1)",
    "test:watch": "vitest",
    "test:coverage": "vitest run --coverage",
    "test:perf": "vitest run --config vitest.config.perf.mts",
    "test:perf:verbose": "vitest run --config vitest.config.perf.mts --reporter=verbose",
    "perf": "node scripts/measure-performance.js",
    "perf:watch": "nodemon --watch dist --watch scripts/measure-performance.js --exec 'node scripts/measure-performance.js'",
    "test:tokens": "vitest run --config vitest.config.tokens.mts",
    "test:tokens:watch": "vitest --config vitest.config.tokens.mts",
    "tokens": "npm test tokens",
    "tokens:coverage": "MLLD_TOKEN_COVERAGE=1 MLLD_TOKEN_CHECK_OPERATORS=0 MLLD_TOKEN_CHECK_PUNCTUATION=0 npm test interpreter/interpreter.fixture.test.ts",
    "test:examples": "INCLUDE_EXAMPLES=true vitest run interpreter/interpreter.fixture.test.ts",
    "test:ast": "npx vitest run core/ast",
    "test:mlldx": "vitest run tests/ephemeral-mode.test.ts --config vitest.config.mlldx.mts",
    "parseperf": "vitest run tests/ast-perf.test.ts",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "lint:ast": "eslint interpreter/**/*.ts core/**/*.ts api/**/*.ts",
    "lint:ast-strict": "eslint interpreter/**/*.ts core/**/*.ts api/**/*.ts --rule 'mlld/require-ast-type-guards: error'",
    "clean": "rimraf dist",
    "clean:generated": "rm -f core/types/*.js core/types/*.js.map grammar/generated/parser/*.js grammar/generated/parser/*.cjs grammar/generated/parser/*.ts grammar/generated/parser/deps/*.js grammar/generated/parser/deps/*.cjs grammar/generated/parser/deps/*.ts && find tests/fixtures -name '*.generated-fixture.json' -delete 2>/dev/null || true && find tests/fixtures -name 'index.ts' -delete 2>/dev/null || true",
    "prepublishOnly": "npm run clean && npm run build",
    "sync:mlldx": "node scripts/sync-mlldx.cjs",
    "publish:mlldx": "node scripts/sync-mlldx.cjs --publish",
    "publish:all": "node scripts/publish-with-mlldx.cjs",
    "pub": "node scripts/publish-with-mlldx.cjs",
    "postpublish": "npm run publish:mlldx",
    "bump": "node scripts/bump-version.js",
    "bump:patch": "node scripts/bump-version.js patch",
    "bump:minor": "node scripts/bump-version.js minor",
    "bump:major": "node scripts/bump-version.js major",
    "testecho": "echo",
    "install:vim": "cd editors/vim && ./install.sh",
    "install:vscode": "cd editors/vscode && npm install && npx vsce package && code --install-extension mlld-vscode-*.vsix",
    "install:cursor": "cd editors/vscode && npm install && npx vsce package && cursor --install-extension mlld-vscode-*.vsix",
    "install:windsurf": "cd editors/vscode && npm install && npx vsce package && windsurf --install-extension mlld-vscode-*.vsix",
    "install:editors": "npm run install:vim && npm run install:vscode",
    "publish:vscode": "cd editors/vscode && npm install && npx vsce publish",
    "package:vscode": "cd editors/vscode && npm install && npx vsce package",
    "knip": "knip"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mlld-lang/mlld.git"
  },
  "keywords": [
    "mlld",
    "interpreter",
    "language",
    "llm",
    "prompt",
    "cli"
  ],
  "author": "Adam Avenir",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/mlld-lang/mlld/issues"
  },
  "homepage": "https://github.com/mlld-lang/mlld#readme",
  "dependencies": {
    "@mozilla/readability": "^0.6.0",
    "@octokit/rest": "^22.0.0",
    "@types/inquirer": "^9.0.8",
    "@types/js-yaml": "^4.0.9",
    "@types/jsdom": "^21.1.7",
    "@types/lodash": "^4.17.16",
    "@types/uuid": "^10.0.0",
    "@types/xmldom": "^0.1.34",
    "acorn": "^8.15.0",
    "chalk": "^4.1.2",
    "commander": "^13.1.0",
    "fs-extra": "^11.3.0",
    "glob": "^11.0.1",
    "gray-matter": "^4.0.3",
    "inquirer": "^12.8.2",
    "js-yaml": "^4.1.0",
    "jsdom": "^26.1.0",
    "llmxml": "^1.4.4",
    "lodash": "^4.17.21",
    "marked": "^4.0.12",
    "minimatch": "^3.1.2",
    "mlld": "^2.0.0-rc36",
    "octokit": "^5.0.3",
    "pathe": "1.1.2",
    "peggy": "^4.2.0",
    "prettier": "^3.6.2",
    "shell-quote": "^1.8.2",
    "tiktoken": "^1.0.21",
    "tinyglobby": "^0.2.14",
    "turndown": "^7.2.0",
    "uuid": "^11.1.0",
    "validator": "^13.15.15",
    "web-tree-sitter": "^0.20.8",
    "winston": "^3.17.0",
    "xmldom": "^0.6.0",
    "yaml": "^2.8.0",
    "yargs": "^17.7.2"
  },
  "devDependencies": {
    "@eslint/js": "^9.24.0",
    "@rollup/plugin-typescript": "^12.1.2",
    "@types/fs-extra": "^11.0.4",
    "@types/node": "^22.17.1",
    "@types/shell-quote": "^1.7.5",
    "@types/yargs": "^17.0.33",
    "@typescript-eslint/eslint-plugin": "^8.26.1",
    "@typescript-eslint/parser": "^8.26.1",
    "eslint": "^9.18.0",
    "knip": "^5.62.0",
    "memfs": "^4.7.0",
    "rimraf": "^6.0.1",
    "tree-sitter-bash": "^0.20.5",
    "tree-sitter-javascript": "^0.20.4",
    "tree-sitter-python": "^0.20.4",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "tsup": "^8.0.2",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.29.1",
    "vite-tsconfig-paths": "^5.1.4",
    "vitest": "^3.1.1",
    "vitest-mock-extended": "^2.0.1",
    "vscode-languageserver-textdocument": "^1.0.12",
    "vscode-languageserver-types": "^3.17.5"
  },
  "optionalDependencies": {
    "keytar": "^7.9.0",
    "vscode-languageserver": "^9.0.1"
  }
}
